server:
  port: 30111

# spring 配置
spring:
  application:
    name: alinesno-infra-base-search-boot
  datasource.dynamic:
    primary: mysql
    datasource:
      mysql:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/dev_alinesno_infra_base_search_v100?characterEncoding=UTF-8&serverTimezone=GMT%2B8&allowMultiQueries=true
        username: root
        password: adminer
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: aip@local
  devtools:
    restart:
      enabled: true

# sa-token配置
sa-token:
  token-name: satoken
  host-path: http://alinesno-infra-base-identity-auth-application.beta.base.infra.linesno.com
  sso:
    auth-url: ${sa-token.host-path}/login
    is-http: true
    check-ticket-url: ${sa-token.host-path}/sso/checkTicket
    slo-url: ${sa-token.host-path}/sso/signout
    get-data-url: ${sa-token.host-path}/sso/getData
  sign:
    secret-key:

#-Dalinesno.base.search.dashscope.api-key=xxxxx
#-Dalinesno.base.search.elasticsearch.host=192.168.101.18
#-Dalinesno.base.search.elasticsearch.port=9092
#-Dalinesno.base.search.elasticsearch.username=elastic
#-Dalinesno.base.search.elasticsearch.password=123456
#-Dalinesno.base.search.pgvector.jdbc-url=jdbc:postgresql://192.168.101.18:5432/postgres
#-Dalinesno.base.search.pgvector.username=postgres
#-Dalinesno.base.search.pgvector.password=123456

alinesno:
  base:
    search:
      dashscope:
        api-key: xxxxx
      elasticsearch:
        host: 192.168.101.18:9200
        username: elastic
        password: 123456
      pgvector:
        jdbc-url: jdbc:postgresql://192.168.101.18:5432/postgres
        username: postgres
        password: 123456

actable:
  table:
    auto: update
  model:
    pack: com.alinesno.infra.base.search.entity;
  database:
    type: mysql
  index:
    prefix: alinesno_base_search_idx_
  unique:
