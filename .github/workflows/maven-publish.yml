# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Maven Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      # 版本管理
      PROJECT_NAME: 'alinesno-infra-base-search-boot'
      PRO_VERSION: '1.0.0-SNAPSHOT'
      CURRENT_PROFIRE: 'dev'
      BUILD_NUMBER: ${{ github.run_number }}

      # 容器镜像
      ALIYUN_CR_REGISTORY: 'registry.cn-shenzhen.aliyuncs.com'
      ALIYUN_CR_NAMESPACE: 'alinesno-infra-platform'

    steps:
      - uses: actions/checkout@v3

      - name: Cache Maven Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Create Nexus Config File
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > nexus-config.xml
          echo '<settings>' >> nexus-config.xml

          echo '  <servers>' >> nexus-config.xml
          echo '    <server>' >> nexus-config.xml
          echo '      <id>rdc-releases</id>' >> nexus-config.xml
          echo '      <username>${{ secrets.NEXUS_USERNAME }}</username>' >> nexus-config.xml
          echo '      <password>${{ secrets.NEXUS_PASSWORD }}</password>' >> nexus-config.xml
          echo '    </server>' >> nexus-config.xml
          echo '    <server>' >> nexus-config.xml
          echo '      <id>rdc-snapshots</id>' >> nexus-config.xml
          echo '      <username>${{ secrets.NEXUS_USERNAME }}</username>' >> nexus-config.xml
          echo '      <password>${{ secrets.NEXUS_PASSWORD }}</password>' >> nexus-config.xml
          echo '    </server>' >> nexus-config.xml
          echo '  </servers>' >> nexus-config.xml

          echo '  <mirrors>' >> nexus-config.xml
          echo '    <mirror>' >> nexus-config.xml
          echo '      <id>mirror</id>' >> nexus-config.xml
          echo '      <mirrorOf>central,jcenter,!rdc-releases,!rdc-snapshots</mirrorOf>' >> nexus-config.xml
          echo '      <name>mirror</name>' >> nexus-config.xml
          echo '      <url>https://repo.maven.apache.org/maven2</url>' >> nexus-config.xml
          echo '    </mirror>' >> nexus-config.xml
          echo '    <mirror>' >> nexus-config.xml
          echo '      <id>rdc-releases</id>' >> nexus-config.xml
          echo '      <mirrorOf>releases</mirrorOf>' >> nexus-config.xml
          echo '      <url>${{ secrets.NEXUS_REPOSITORY_RELEASE }}</url>' >> nexus-config.xml
          echo '    </mirror>' >> nexus-config.xml
          echo '    <mirror>' >> nexus-config.xml
          echo '      <id>rdc-snapshots</id>' >> nexus-config.xml
          echo '      <mirrorOf>snapshots</mirrorOf>' >> nexus-config.xml
          echo '      <url>${{ secrets.NEXUS_REPOSITORY_SNAPSHOT }}</url>' >> nexus-config.xml
          echo '    </mirror>' >> nexus-config.xml
          echo '  </mirrors>' >> nexus-config.xml 

          echo '  <profiles>' >> nexus-config.xml
          echo '    <profile>' >> nexus-config.xml
          echo '      <id>rdc</id>' >> nexus-config.xml
          echo '      <properties>' >> nexus-config.xml
          echo '        <altReleaseDeploymentRepository>' >> nexus-config.xml
          echo '          rdc-releases::default::${{ secrets.NEXUS_REPOSITORY_RELEASE }}' >> nexus-config.xml
          echo '        </altReleaseDeploymentRepository>' >> nexus-config.xml
          echo '        <altSnapshotDeploymentRepository>' >> nexus-config.xml
          echo '          rdc-snapshots::default::${{ secrets.NEXUS_REPOSITORY_SNAPSHOT }}' >> nexus-config.xml
          echo '        </altSnapshotDeploymentRepository>' >> nexus-config.xml
          echo '      </properties>' >> nexus-config.xml
          echo '      <repositories>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>central</id>' >> nexus-config.xml
          echo '          <url>https://repo.maven.apache.org/maven2</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>snapshots</id>' >> nexus-config.xml
          echo '          <url>https://repo.maven.apache.org/maven2</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>rdc-releases</id>' >> nexus-config.xml
          echo '          <url>${{ secrets.NEXUS_REPOSITORY_RELEASE }}</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>rdc-snapshots</id>' >> nexus-config.xml
          echo '          <url>${{ secrets.NEXUS_REPOSITORY_SNAPSHOT }}</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '      </repositories> ' >> nexus-config.xml
          echo '    </profile>' >> nexus-config.xml
          echo '  </profiles>' >> nexus-config.xml

          echo '  <activeProfiles>' >> nexus-config.xml
          echo '    <activeProfile>rdc</activeProfile>' >> nexus-config.xml
          echo '  </activeProfiles>' >> nexus-config.xml
          echo '</settings>' >> nexus-config.xml

      - name: Build and Deploy to Nexus
        run: mvn clean deploy --settings nexus-config.xml

      - name: Deploy to AliyunCR
        run: |
          mvn -B -U -s nexus-config.xml -f ${{ env.PROJECT_NAME }}/pom.xml clean compile jib:build \
                        -Ddocker.registry.name=${{ env.ALIYUN_CR_NAMESPACE }} \
                        -Djib.to.tags=${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }} \
                        -Djib.to.auth.username=${{secrets.ALIYUN_CR_USERNAME}} \
                        -Djib.to.auth.password=${{secrets.ALIYUN_CR_PASSWORD}}

      # - name: Install MurphySec code scan cli
      #   run: |
      #     wget -q https://s.murphysec.com/release/install.sh -O - | /bin/bash

      # - name: Code scan
      #   run: murphysec scan . --token ${{ secrets.MURPHYSEC_TOKEN }}

      - name: local remote scp
        uses: cross-the-world/scp-pipeline@master
        with:
          host: ${{ secrets.SERVER_BATA_HOST_01 }}
          port: ${{ secrets.SERVER_BATA_PORT_01 }}
          user: ${{ secrets.SERVER_BATA_USER_01 }}
          pass: ${{ secrets.SERVER_BATA_KEY_01 }}
          local: "./deploy/*"
          remote: /home/github-action/${{ env.PROJECT_NAME }}/

      - name: SSH Pipelines
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: "ssh pipeline"
        with:
          host: ${{ secrets.SERVER_BATA_HOST_01 }}
          port: ${{ secrets.SERVER_BATA_PORT_01 }}
          user: ${{ secrets.SERVER_BATA_USER_01 }}
          pass: ${{ secrets.SERVER_BATA_KEY_01 }}
          connect_timeout: 30s
          script: |
            export PROJECT_NAME=${{ env.PROJECT_NAME }}  # 导出项目名称变量
            export VERSION=${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }} # 根据环境变量构建版本号

            export ALIYUN_CR_REGISTORY=${{ env.ALIYUN_CR_REGISTORY }} # 设置阿里云容器镜像仓库地址
            export ALIYUN_CR_NAMESPACE=${{ env.ALIYUN_CR_NAMESPACE }} # 设置阿里云容器镜像命名空间
            export NAMESPACE=${{ secrets.K8S_NAMESPACE }} # 导出Kubernetes命名空间（安全敏感信息）

            export REDIS_HOST=${{ secrets.DEV_REDIS_HOST }} # 导出Redis服务的主机地址（安全敏感信息）
            export REDIS_KEY=${{ secrets.DEV_REDIS_KEY }} # 导出Redis服务的密钥（安全敏感信息）

            export INFRA_DEV_DOMAIN=${{ secrets.INFRA_BETA_BASE_DOMAIN }} # 设置开发环境的域名
            export INFRA_GATEWAY_PROXY=${{ secrets.DEV_INFRA_GATEWAY_PROXY }} # 设置开发环境的网关代理（安全敏感信息）

            # 导出千问密钥（安全敏感信息）
            export QIANWEN_SK=${{ secrets.DEV_QIANWEN_SK}}

            # 导出MySQL数据库连接信息（安全敏感信息）
            export DB_MYSQL_URL=${{ secrets.DEV_DB_MYSQL_URL }}
            export DB_MYSQL_USRENAME=${{ secrets.DEV_DB_MYSQL_USRENAME }}
            export DB_MYSQL_PASSWORD=${{ secrets.DEV_DB_MYSQL_PASSWORD }}

            # 导出Elasticsearch数据库连接信息（安全敏感信息）
            export DB_ELASITCSEARCH_URL=${{ secrets.DEV_ELASITCSEARCH_URL }}
            export DB_ELASTICSEARCH_USERNAME=${{ secrets.DEV_ELASTICSEARCH_USERNAME }}
            export DB_ELASTICSEARCH_PASSWORD=${{ secrets.DEV_ELASTICSEARCH_PASSWORD }}

            # 导出PGVector数据库连接信息（安全敏感信息）
            export DB_PGVECTOR_URL=${{ secrets.DEV_PGVECTOR_URL }}
            export DB_PGVECTOR_USERNAME=${{ secrets.DEV_PGVECTOR_USERNAME }}
            export DB_PGVECTOR_PASSWORD=${{ secrets.DEV_PGVECTOR_PASSWORD }}

            # 使用envsubst处理Kubernetes配置文件中的环境变量，并应用配置
            envsubst < /home/github-action/${{ env.PROJECT_NAME }}/kubernetes-${{ env.CURRENT_PROFIRE }}.yml | kubectl apply -f -

            # 删除项目文件夹以清理环境
            rm -rf /home/github-action/${{ env.PROJECT_NAME }}/
